Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-12-23T18:37:34+03:00

====== About SSH ======
Создан Понедельник 23 декабря 2019

SSH или Secure Shell - это зашифрованный протокол, который часто используется для взаимодействия и удаленного управления серверами. Если вы захотите что-либо сделать на удаленном сервере, скорее всего, вам придется воспользоваться SSH и работать через терминал.

В SSH существует несколько способов авторизации. Вы можете каждый раз вводить пароль пользователя или использовать более безопасный и надежный способ - ключи SSH. Что самое интересное, он более удобен для применения, вам даже не нужно будет вводить пароль. В этой статье мы рассмотрим как настраивается авторизация по ключу SSH.

===== Создание ключей ssh =====
Создан Понедельник 23 декабря 2019

Сначала необходимо создать ключи ssh для аутентификации на локальном сервере. Для этого существует специальная утилита ssh-keygen, которая входит в набор утилит OpenSSH. По умолчанию она создает пару 2048 битных RSA ключей, которая подойдет не только для SSH, но и для большинства других ситуаций.

Генерация ключей ssh выполняется командой:

{{{code: lang="sh" linenumbers="False"
$ ssh-keygen
}}}


	'''
	Generating public/private rsa key pair.
	Enter file in which to save the key (/root/.ssh/id_rsa): 
	Enter passphrase (empty for no passphrase): 
	Enter same passphrase again: 
	Your identification has been saved in /root/.ssh/id_rsa.
	Your public key has been saved in /root/.ssh/id_rsa.pub.
	The key fingerprint is:
	SHA256:qb8cN/ZYRaoPqJZV5XN3sL4WZWU+W2A1Jr7gX207zuA root@aspire-771g
	The key's randomart image is:
	+---[RSA 2048]----+
	|             . +.|
	|            o * +|
	|           + o.*.|
	|         .o +o+.O|
	|        S. ..=.=B|
	|       ... ...+o.|
	|      .oo * .o = |
	|      o+ + B. * .|
	|     .. +.. oE o |
	+----[SHA256]-----+
	'''


Утилита предложит выбрать расположение ключей. По умолчанию ключи располагаются в папке ~/.ssh/. Лучше ничего не менять, чтобы все работало по умолчанию и ключи автоматически подхватывались. Секретный ключ будет называться **id_rsa**, а публичный **id_rsa.pub**.

Затем утилита предложит ввести пароль для дополнительного шифрования ключа на диске. Его можно не указывать, если не хотите. Использование дополнительного шифрования имеет только один минус - необходимость вводить пароль, и несколько преимуществ:

	* Пароль никогда не попадет в сеть, он используется только на локальной машине для расшифровки ключа. Это значит что перебор по паролю больше невозможен.
	* Секретный ключ хранится в закрытом каталоге и у клиента ssh нет к нему доступа пока вы не введете пароль;
	* Если злоумышленник хочет взломать аутентификацию по ключу SSH, ему понадобится доступ к вашей системе. И даже тогда ключевая фраза может стать серьезной помехой на его пути.

Но все же, это необязательное дополнение и если не хотите, то вы можете просто нажать Enter. Тогда доступ по ключу ssh будет выполняться автоматически и вам не нужно будет что-либо вводить.

Теперь у вас есть открытый и закрытый ключи SSH и вы можете использовать их для проверки подлинности. Дальше нам осталось разместить открытый ключ на удаленном сервере.

===== Загрузка ключа на сервер =====
Когда генерация ключей завершена, нам осталось только загрузить ключ на сервер. Для загрузки ключа можно использовать несколько способов. В некоторых случаях вы можете указать ключ в панели управления сервером, например, сPanel или любой другой. Но мы такой способ рассматривать не будем. Мы рассмотрим ручные способы.

Самый простой способ скопировать ключ на удаленный сервер - это использовать утилиту ssh-copy-id. Она тоже входит в пакет программ OpenSSH. Но для работы этого метода вам нужно иметь пароль доступа к серверу по SSH. Синтаксис команды:

{{{code: lang="sh" linenumbers="False"
$ ssh-copy-id root@maksimov.spb.ru
}}}


'''
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@maksimov.spb.ru's password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'root@maksimov.spb.ru'"
and check to make sure that only the key(s) you wanted were added.
'''


Если вы не захотели создать ssh ключ с доступом по паролю, то вы сразу же будете авторизованы, что очень удобно. Иначе, сначала вам придется ввести фразу-пароль для расшифровки ключа.

===== Отключение проверки пароля =====
Если пароль больше не будет использоваться, то для увеличения безопасности системы лучше его вовсе отключить. Но убедитесь, что ключ надежно сохранен и вы его не потеряете, потому что по паролю вы больше не войдете. Авторизуйтесь на сервере, затем откройте конфигурационный файл /etc/ssh/sshd_config и найдите там директиву PasswordAuthenticatin. Нужно установить ее значение в No:

{{{code: lang="sh" linenumbers="False"
$ sudo vi /etc/ssh/sshd_config
}}}


	''PasswordAuthentication no''

Дальше будет возможно только подключение по ключу ssh, пароль не будет приниматься.

===== Установка SSHFS =====
SSHFS (или Secure SHell FileSystem) – это программное обеспечение на основе Linux, которое позволяет монтировать удаленные файловые системы на локальную машину по протоколу SSH. В системах Ubuntu и Debian (а также подобных) эту программу можно установить при помощи apt:

{{{code: lang="sh" linenumbers="False"
$ sudo apt install sshfs
}}}


Чтобы монтировать простым пользователем делаем
{{{code: lang="sh" linenumbers="False"
$ sudo gpasswd -a $USER fuse
# ошибка gpasswd: группа «fuse» не существует в /etc/group
# возможно это не требуется, нужна проверка
}}}


===== Монтирование удаленной файловой системы =====
Добавить в [[/etc/fstab]]

	''root@maksimov.spb.ru:/home/share /media/homeserver fuse.sshfs noauto,_netdev,users,allow_other 0 0''

При этом монтирование будет осуществляться по запросу пользователя. Если требуется автоматическое монтирование, то опцию **noauto** заменить на **defaults**.

**NB!** 

Если при монтировании выдается сообщение об ошибке

	''read: Connection reset by peer''

, необходимо:

1) послать на адрес, к которому коннектимся, какой-нибудь текст

{{{code: lang="sh" linenumbers="False"
$ ssh user@remote.host echo text
}}}


в ответ будет выдано сообщение, из которого в котором необходимо найти строки вида:

'''
Add correct host key in /home/user/.ssh/known_hosts to get rid of this message.
Offending key in /home/user/.ssh/known_hosts:2
'''

последняя цифра (в данном случае 2) указывает но номер строки в файле /home/user/.ssh/known_hosts , которую необходимо удалить, 

2) удалить в файле known_hosts найденную строку:

{{{code: lang="sh" linenumbers="False"
$ sed -i -e '2d' /home/user/.ssh/known_hosts
}}}


После этих действий ошибка не должна появляться.



